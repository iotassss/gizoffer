openapi: 3.0.3
info:
  title: Gizoffer
  description: Gizoffer is a platform that helps you find the best deals with Gizomo employees using GIZ.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Development server
security:
  - BearerAuth: []
tags:
  - name: users
  - name: offers
  # - name: tags
  - name: entries
  - name: auth
paths:
  /login:
    post:
      summary: Login
      tags:
        - auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: yourpassword
      responses:
        "200":
          description: login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                  message:
                    type: string
                    example: "Login successful."
        "401":
          description: 認証失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid credentials."
  /users:
    post:
      summary: Create a user
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPostRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPostResponse"
  /users/{uuid}:
    get:
      summary: Get a user by UUID
      tags:
        - users
      parameters:
        - $ref: "#/components/parameters/uuid"
      responses:
        "200":
          description: A user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGetResponse"
  /offers:
    get:
      summary: Get all offers
      tags:
        - offers
      responses:
        "200":
          description: A list of offers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OffersGetResponse"
    post:
      summary: Create an offer
      tags:
        - offers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OfferPostRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OfferPostResponse"
  /offers/{uuid}:
    get:
      summary: Get an offer by UUID
      tags:
        - offers
      parameters:
        - $ref: "#/components/parameters/uuid"
      responses:
        "200":
          description: An offer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OfferGetResponse"
    put:
      summary: Update an offer by UUID
      tags:
        - offers
      parameters:
        - $ref: "#/components/parameters/uuid"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OfferPostRequest"
      responses:
        "200":
          description: Updated
    delete:
      summary: Delete an offer by UUID
      tags:
        - offers
      parameters:
        - $ref: "#/components/parameters/uuid"
      responses:
        "204":
          description: No content
  /offers/{uuid}/entry:
    post:
      summary: Entry an offer by UUID
      tags:
        - offers
      parameters:
        - $ref: "#/components/parameters/uuid"
      responses:
        "201":
          description: Created
    delete:
      summary: Cancel an entry by UUID
      tags:
        - offers
      parameters:
        - $ref: "#/components/parameters/uuid"
      responses:
        "204":
          description: No content
components:
  schemas:
    UserPostRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - name
        - email
        - password
    UserPostResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
    UserGetResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
      required:
        - uuid
        - name
    OfferPostRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        giz:
          # いったんintで
          type: integer
        chat_url:
          type: string
        is_public:
          type: boolean
        deadline:
          type: string
          format: date-time
      required:
        - title
        - description
        - is_public
        - deadline
    OfferPostResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
    OfferGetResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        # いったんintで
        chat_url:
          type: string
        giz:
          type: integer
        is_public:
          type: boolean
        deadline:
          type: string
          format: date-time
        entry_users:
          type: array
          items:
            $ref: "#/components/schemas/UserGetResponse"
      required:
        - uuid
        - title
        - description
        - is_public
        - deadline
    OffersGetResponse:
      type: array
      items:
        $ref: "#/components/schemas/OfferGetResponse"
  parameters:
    uuid:
      name: uuid
      in: path
      required: true
      description: UUID of the resource
      schema:
        type: string
        format: uuid
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
